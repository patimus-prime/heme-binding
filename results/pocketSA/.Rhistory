separate(V1, c(NA ,"Pocket_Excluded_SA"), "= ") -> excluded_df
accessible_df %>%
separate(V1, c(NA, "Pocket_Accessible_SA"),"= ") -> accessible_df#[['perf']]
# 4 into one dataframe --------------------
pocketSA_df <- excluded_df
pocketSA_df['pocket_Accessible_SA'] <- accessible_df$Pocket_Accessible_SA
View(excluded_df_pocket)
View(excluded_df)
View(combined_results_df)
combined_results_df %>%
filter(grepl('excluded', V1)) -> excluded_df
View(excluded_df)
View(excluded_df)
View(excluded_df)
excluded_df %>%
separate(V1, c(NA ,"Pocket_Excluded_SA"), "= ") -> excluded_df
accessible_df %>%
separate(V1, c(NA, "Pocket_Accessible_SA"),"= ") -> accessible_df#[['perf']]
combined_results_df %>%
filter(grepl('excluded', V1)) -> excluded_df
combined_results_df %>%
filter(grepl('accessible', V1)) -> accessible_df
excluded_df %>%
separate(V1, c(NA ,"Pocket_Excluded_SA"), "= ") -> excluded_df
accessible_df %>%
separate(V1, c(NA, "Pocket_Accessible_SA"),"= ") -> accessible_df#[['perf']]
View(excluded_df)
excluded_df %>%
group_by(PDB_ID) %>% slice(which.max(Pocket_Excluded_SA)) -> max_excluded_df
View(max_excluded_df)
accessible_df %>%
group_by(PDB_ID) %>% slice(which.max(Pocket_Accesible_SA)) -> max_accessible_df
accessible_df %>%
group_by(PDB_ID) %>% slice(which.max(Pocket_Accessible_SA)) -> max_accessible_df
View(max_accessible_df)
library(dplyr)
library(data.table)
library(tidyr)
library(ggplot2) #thus far not used 22 June 2021
source("~/heme-binding/scripts/r/addpdbcol.R")
#for filtering: https://www.youtube.com/watch?v=PsSqn0pxouM
# 0. Notes on global variables...---------------------------
#may need to specify this option every run/change for running ALL PROCESSED FILES
#options(max.print = 999999999999999999999) #or whatever number
# 1. Assembling all results into one dataframe -----------------------------
#set working directory to the folder w files!
setwd("~/heme-binding/results/pocketSA")
# import all the shit that's been processed
# currently using results specific file, all of type .txt; therefore:
result_files_ls <- list.files(pattern = "*.pocketSA.txt") #double check what's up
# may need to add path = whatever from wd into the parentheses
# result_files_ls is now a list of all the fuckin txt files
# now read them from the list into a dataframe
result_files_df <- lapply(result_files_ls, function(x) {read.delim(file = x, header = FALSE)})
# add source pdb column
result_files_df <- addpdbcol(result_files_df)
#i think each file now has its own dataframe. now we combine them
combined_results_df <- do.call("rbind", lapply(result_files_df, as.data.frame))
#@ line 981 (w/ orig PDBs, get an enormous volume. can either throw out this header, or filter as below)
# combined_results_df is now the final output of this section and the primary df
# 2. Acquire data from noise --------------------------------------
# only lines with 'surface area'
combined_results_df %>%
filter(grepl('surface area = ', V1)) -> combined_results_df
# we must divide this into two separate data frames, excluded and accessible.
# they can be merged later into two columns in the same dataframe.
# FIXME: Perhaps rewrite this later when you feel more confident in R skills
combined_results_df %>%
filter(grepl('excluded', V1)) -> excluded_df
combined_results_df %>%
filter(grepl('accessible', V1)) -> accessible_df
#these two df would change into two columns of the same in the case of rewrite
# 3 acquire only the numeric data ----------------------
excluded_df %>%
separate(V1, c(NA ,"Pocket_Excluded_SA"), "= ") -> excluded_df
accessible_df %>%
separate(V1, c(NA, "Pocket_Accessible_SA"),"= ") -> accessible_df#[['perf']]
# select only the max rows. There's lots of duplicates. The surf() algorithm in Chimera seems to be a troublemaker
excluded_df %>%
group_by(PDB_ID) %>% slice(which.max(Pocket_Excluded_SA)) -> max_excluded_df
accessible_df %>%
group_by(PDB_ID) %>% slice(which.max(Pocket_Accessible_SA)) -> max_accessible_df
# 4 into one dataframe --------------------
pocketSA_df <- max_excluded_df
pocketSA_df['pocket_Accessible_SA'] <- max_accessible_df$Pocket_Accessible_SA
View(pocketSA_df)
# add pocket surface area stuff
mega_df <- merge(mega_df, pocketSA_df,by.x = "PDB_ID")
View(mega_df)
library(dplyr)
library(data.table)
library(tidyr)
library(ggplot2) #thus far not used 22 June 2021
source("~/heme-binding/scripts/r/addpdbcol.R")
#for filtering: https://www.youtube.com/watch?v=PsSqn0pxouM
# 0. Notes on global variables...---------------------------
#may need to specify this option every run/change for running ALL PROCESSED FILES
#options(max.print = 999999999999999999999) #or whatever number
# 1. Assembling all results into one dataframe -----------------------------
#set working directory to the folder w files!
#hemeSA_path = "~/heme-binding/results/hemeSA"
#setwd(hemeSA_path)
setwd("~/heme-binding/results/hemeSA")
# import all the shit that's been processed
# currently using results specific file, all of type .txt; therefore:
result_files_ls <- list.files(pattern = "*.hemeSA.txt") #double check what's up
# may need to add path = whatever from wd into the parentheses
# result_files_ls is now a list of all the fuckin txt files
# now read them from the list into a dataframe
result_files_df <- lapply(result_files_ls, function(x) {read.delim(file = x, header = FALSE)})
# add source pdb column
result_files_df <- addpdbcol(result_files_df)
#i think each file now has its own dataframe. now we combine them
combined_results_df <- do.call("rbind", lapply(result_files_df, as.data.frame))
#@ line 981 (w/ orig PDBs, get an enormous volume. can either throw out this header, or filter as below)
# combined_results_df is now the final output of this section and the primary df
# 2. Acquire data from noise ------------
# only lines with 'surface area'
combined_results_df %>%
filter(grepl('surface area = ', V1)) -> combined_results_df
# we must divide this into two separate data frames, excluded and accessible.
# they can be merged later into two columns in the same dataframe.
# FIXME: Perhaps rewrite this later when you feel more confident in R skills
combined_results_df %>%
filter(grepl('excluded', V1)) -> excluded_df
combined_results_df %>%
filter(grepl('accessible', V1)) -> accessible_df
#these two df would change into two columns of the same in the case of rewrite
# acquire only the numeric data
# THIS ONE TO CHECK, BUT SEEMS 100% OK!
#excluded_df %>%
#  separate(V1, c(NA ,"exc_sa"), "= ") -> excluded_df[['exc_sa']]
excluded_df %>%
separate(V1, c(NA ,"Heme_Excluded_SA"), "= ") -> excluded_df
accessible_df %>%
separate(V1, c(NA, "Heme_Accessible_SA"),"= ") -> accessible_df#[['perf']]
View(accessible_df)
excluded_df %>%
group_by(PDB_ID) %>% slice(which.max(Heme_Excluded_SA)) -> max_excluded_df
accessible_df %>%
group_by(PDB_ID) %>% slice(which.max(Heme_Accessible_SA)) -> max_accessible_df
hemeSA_df['Heme_Accessible_SA'] <- max_accessible_df$Heme_Accessible_SA
View(hemeSA_df)
# This is the main R file for this project. Launches other scripts used
#source("C:/Users/nobody/Documents/R/MyScript.R")
source("~/heme-binding/scripts/r/volume.R")
source("~/heme-binding/scripts/r/aa_frequency.R")
source("~/heme-binding/scripts/r/hemeSA.R")
source("~/heme-binding/scripts/r/pocketSA.R")
#this is the way. but first must only take largest volume pocket from volume data
mega_df <- merge(max_volume_df,hemeSA_df,by.x = "PDB_ID")
# add pocket surface area stuff. Note this is max pocket surface area
mega_df <- merge(mega_df, pocketSA_df,by.x = "PDB_ID")
# 14 July 2021, 13:12: we need a script to acquire host organism (new function) and mol function (adapt script)
# TIDY UP! ------------------
rm(result_files_df,
combined_results_df,
temp_df,
volume_data_clean,
no_quest,
line_w_code,
#clean_tbl,
residue_table_prelim,
result_files_df,
combined_results_df,
residue_table_prelim_df_w_crap,
residues_data_df,
#hemeSA_df,
#max_volume_df,
accessible_df,
excluded_df
)
View(mega_df)
# TIDY UP! ------------------
rm(result_files_df,
combined_results_df,
temp_df,
volume_data_clean,
no_quest,
line_w_code,
#clean_tbl,
residue_table_prelim,
result_files_df,
combined_results_df,
residue_table_prelim_df_w_crap,
residues_data_df,
#hemeSA_df,
#max_volume_df,
accessible_df,
excluded_df
)
# This is the main R file for this project. Launches other scripts used
#source("C:/Users/nobody/Documents/R/MyScript.R")
source("~/heme-binding/scripts/r/volume.R")
source("~/heme-binding/scripts/r/aa_frequency.R")
source("~/heme-binding/scripts/r/hemeSA.R")
source("~/heme-binding/scripts/r/pocketSA.R")
#this is the way. but first must only take largest volume pocket from volume data
mega_df <- merge(max_volume_df,hemeSA_df,by.x = "PDB_ID")
# add pocket surface area stuff. Note this is max pocket surface area
mega_df <- merge(mega_df, pocketSA_df,by.x = "PDB_ID")
# 14 July 2021, 13:12: we need a script to acquire host organism (new function) and mol function (adapt script)
# TIDY UP! ------------------
rm(result_files_df,
combined_results_df,
temp_df,
volume_data_clean,
no_quest,
line_w_code,
#clean_tbl,
residue_table_prelim,
result_files_df,
combined_results_df,
residue_table_prelim_df_w_crap,
residues_data_df,
#hemeSA_df,
#max_volume_df,
accessible_df,
excluded_df
)
library(dplyr)
library(data.table)
library(tidyr)
library(ggplot2) #thus far not used 22 June 2021
source("~/heme-binding/scripts/r/addpdbcol.R")
#for filtering: https://www.youtube.com/watch?v=PsSqn0pxouM
# 0. Notes on global variables...---------------------------
#may need to specify this option every run/change for running ALL PROCESSED FILES
#options(max.print = 999999999999999999999) #or whatever number
# 1. Assembling all results into one dataframe -----------------------------
#set working directory to the folder w files!
setwd("~/heme-binding/results/volume")
# import all the shit that's been processed
# currently using results specific file, all of type .txt; therefore:
result_files_ls <- list.files(pattern = "*.txt")
# may need to add path = whatever from wd into the parentheses
# result_files_ls is now a list of all the fuckin txt files
# now read them from the list into a dataframe
result_files_df <- lapply(result_files_ls, function(x) {read.delim(file = x, header = FALSE)})
# add source pdb column
result_files_df <- addpdbcol(result_files_df)
#i think each file now has its own dataframe. now we combine them
combined_results_df <- do.call("rbind", lapply(result_files_df, as.data.frame))
#@ line 981 (w/ orig PDBs, get an enormous volume. can either throw out this header, or filter as below)
# combined_results_df is now the final output of this section and the primary df
# 2. Volume Data ------------------------------------------
# get only the REAL, INDIV VOLUMES ACQUIRED!!!
# remove the sum volume
combined_results_df %>%
filter(grepl('[?]', V1)) -> combined_results_df
# acquire only the numeric data
combined_results_df %>%
separate(V1, c(NA ,"Volume_Data"), "volume = ") -> volume_data_df
# 3. Filter ------------
# remove the NA values from the dataframe (this is a result of rows that did not contain volume data)
volume_data_clean <- na.omit(volume_data_df)
volume_data_df <- volume_data_clean
# shit was imported from the text file as strings, convert to numbers
volume_data_df$volume_data <- as.numeric(as.character(volume_data_df$volume_data))
# remove outliers ----------
# outlier operation however FUCKS IT UP so... need to convert back to df in between ops
# therefore, below code filters >50, conv back to df, filter <= 1000, conv back to df
volume_data_df <- volume_data_df[volume_data_df$volume_data >= 50, ]
volume_data_df <- as.data.frame(volume_data_df)
#volume_data_df <- volume_data_df[volume_data_df$volume_data <= 1000, ]
#volume_data_df <- as.data.frame(volume_data_df)
# selecting only the max for each row
volume_data_df %>%
group_by(PDB_ID) %>% slice(which.max(volume_data)) -> max_volume_df
##group %>% group_by(sub) %>% slice(which.max(marks))
# from: https://www.geeksforgeeks.org/how-to-select-row-with-maximum-value-in-each-group-in-r-language/
# 4. VOLUME DATA PLOT! -----------------
hist(volume_data_df$volume_data,
main = "Distribution of Volume of Pockets",
xlab = "Volume, A3",
col = "darkmagenta",
xlim = c(50,600), #force start at 50 then go to 1000
#breaks = c(0,100,150,200,250,300,350,400,450,1000)
)
# 99. Cleanup!
rm(result_files_df,
combined_results_df,
temp_df,
volume_data_clean,
no_quest,
line_w_code,
)
# This is the main R file for this project. Launches other scripts used
#source("C:/Users/nobody/Documents/R/MyScript.R")
source("~/heme-binding/scripts/r/volume.R")
source("~/heme-binding/scripts/r/aa_frequency.R")
source("~/heme-binding/scripts/r/hemeSA.R")
source("~/heme-binding/scripts/r/pocketSA.R")
#this is the way. but first must only take largest volume pocket from volume data
mega_df <- merge(max_volume_df,hemeSA_df,by.x = "PDB_ID")
# add pocket surface area stuff. Note this is max pocket surface area
mega_df <- merge(mega_df, pocketSA_df,by.x = "PDB_ID")
# 14 July 2021, 13:12: we need a script to acquire host organism (new function) and mol function (adapt script)
# TIDY UP! ------------------
rm(result_files_df,
combined_results_df,
temp_df,
volume_data_clean,
no_quest,
line_w_code,
#clean_tbl,
residue_table_prelim,
result_files_df,
combined_results_df,
residue_table_prelim_df_w_crap,
residues_data_df,
#hemeSA_df,
#max_volume_df,
accessible_df,
excluded_df
)
# This is the main R file for this project. Launches other scripts used
#source("C:/Users/nobody/Documents/R/MyScript.R")
source("~/heme-binding/scripts/r/volume.R")
source("~/heme-binding/scripts/r/aa_frequency.R")
source("~/heme-binding/scripts/r/hemeSA.R")
source("~/heme-binding/scripts/r/pocketSA.R")
#this is the way. but first must only take largest volume pocket from volume data
mega_df <- merge(max_volume_df,hemeSA_df,by.x = "PDB_ID")
# add pocket surface area stuff. Note this is max pocket surface area
mega_df <- merge(mega_df, pocketSA_df,by.x = "PDB_ID")
# 14 July 2021, 13:12: we need a script to acquire host organism (new function) and mol function (adapt script)
# TIDY UP! ------------------
rm(result_files_df,
combined_results_df,
temp_df,
volume_data_clean,
no_quest,
line_w_code,
#clean_tbl,
residue_table_prelim,
result_files_df,
combined_results_df,
residue_table_prelim_df_w_crap,
residues_data_df,
#hemeSA_df,
#max_volume_df,
accessible_df,
excluded_df
)
View(mega_df)
View(mega_df)
library(dplyr)
library(data.table)
library(tidyr)
library(ggplot2) #thus far not used 22 June 2021
source("~/heme-binding/scripts/r/addpdbcol.R")
#for filtering: https://www.youtube.com/watch?v=PsSqn0pxouM
# 0. Notes on global variables...---------------------------
#may need to specify this option every run/change for running ALL PROCESSED FILES
#options(max.print = 999999999999999999999) #or whatever number
# 1. Assembling all results into one dataframe -----------------------------
#set working directory to the folder w files!
setwd("~/heme-binding/results/volume")
# import all the shit that's been processed
# currently using results specific file, all of type .txt; therefore:
result_files_ls <- list.files(pattern = "*.txt")
# may need to add path = whatever from wd into the parentheses
# result_files_ls is now a list of all the fuckin txt files
# now read them from the list into a dataframe
result_files_df <- lapply(result_files_ls, function(x) {read.delim(file = x, header = FALSE)})
# add source pdb column
result_files_df <- addpdbcol(result_files_df)
#i think each file now has its own dataframe. now we combine them
combined_results_df <- do.call("rbind", lapply(result_files_df, as.data.frame))
#@ line 981 (w/ orig PDBs, get an enormous volume. can either throw out this header, or filter as below)
# combined_results_df is now the final output of this section and the primary df
# 2. Volume Data ------------------------------------------
# get only the REAL, INDIV VOLUMES ACQUIRED!!!
# remove the sum volume
combined_results_df %>%
filter(grepl('[?]', V1)) -> combined_results_df
# acquire only the numeric data
combined_results_df %>%
separate(V1, c(NA ,"volume_data"), "volume = ") -> volume_data_df
# 3. Filter ------------
# remove the NA values from the dataframe (this is a result of rows that did not contain volume data)
volume_data_clean <- na.omit(volume_data_df)
volume_data_df <- volume_data_clean
# shit was imported from the text file as strings, convert to numbers
volume_data_df$volume_data <- as.numeric(as.character(volume_data_df$volume_data))
# remove outliers ----------
# outlier operation however FUCKS IT UP so... need to convert back to df in between ops
# therefore, below code filters >50, conv back to df, filter <= 1000, conv back to df
volume_data_df <- volume_data_df[volume_data_df$volume_data >= 50, ]
volume_data_df <- as.data.frame(volume_data_df)
#volume_data_df <- volume_data_df[volume_data_df$volume_data <= 1000, ]
#volume_data_df <- as.data.frame(volume_data_df)
# selecting only the max for each row
volume_data_df %>%
group_by(PDB_ID) %>% slice(which.max(volume_data)) -> max_volume_df
##group %>% group_by(sub) %>% slice(which.max(marks))
# from: https://www.geeksforgeeks.org/how-to-select-row-with-maximum-value-in-each-group-in-r-language/
# 4. VOLUME DATA PLOT! -----------------
hist(volume_data_df$volume_data,
main = "Distribution of Volume of Pockets",
xlab = "Volume, A3",
col = "darkmagenta",
xlim = c(50,600), #force start at 50 then go to 1000
#breaks = c(0,100,150,200,250,300,350,400,450,1000)
)
# 99. Cleanup!
rm(result_files_df,
combined_results_df,
temp_df,
volume_data_clean,
no_quest,
line_w_code,
)
# This is the main R file for this project. Launches other scripts used
#source("C:/Users/nobody/Documents/R/MyScript.R")
source("~/heme-binding/scripts/r/volume.R")
source("~/heme-binding/scripts/r/aa_frequency.R")
source("~/heme-binding/scripts/r/hemeSA.R")
source("~/heme-binding/scripts/r/pocketSA.R")
#this is the way. but first must only take largest volume pocket from volume data
mega_df <- merge(max_volume_df,hemeSA_df,by.x = "PDB_ID")
# add pocket surface area stuff. Note this is max pocket surface area
mega_df <- merge(mega_df, pocketSA_df,by.x = "PDB_ID")
# 14 July 2021, 13:12: we need a script to acquire host organism (new function) and mol function (adapt script)
# TIDY UP! ------------------
rm(result_files_df,
combined_results_df,
temp_df,
volume_data_clean,
no_quest,
line_w_code,
#clean_tbl,
residue_table_prelim,
result_files_df,
combined_results_df,
residue_table_prelim_df_w_crap,
residues_data_df,
#hemeSA_df,
#max_volume_df,
accessible_df,
excluded_df
)
# This is the main R file for this project. Launches other scripts used
#source("C:/Users/nobody/Documents/R/MyScript.R")
source("~/heme-binding/scripts/r/volume.R")
source("~/heme-binding/scripts/r/aa_frequency.R")
source("~/heme-binding/scripts/r/hemeSA.R")
source("~/heme-binding/scripts/r/pocketSA.R")
#this is the way. but first must only take largest volume pocket from volume data
mega_df <- merge(max_volume_df,hemeSA_df,by.x = "PDB_ID")
# add pocket surface area stuff. Note this is max pocket surface area
mega_df <- merge(mega_df, pocketSA_df,by.x = "PDB_ID")
# 14 July 2021, 13:12: we need a script to acquire host organism (new function) and mol function (adapt script)
# TIDY UP! ------------------
rm(result_files_df,
combined_results_df,
temp_df,
volume_data_clean,
no_quest,
line_w_code,
#clean_tbl,
residue_table_prelim,
result_files_df,
combined_results_df,
residue_table_prelim_df_w_crap,
residues_data_df,
#hemeSA_df,
#max_volume_df,
accessible_df,
excluded_df
)
# TIDY UP! ------------------
rm(result_files_df,
combined_results_df,
temp_df,
volume_data_clean,
no_quest,
line_w_code,
#clean_tbl,
residue_table_prelim,
result_files_df,
combined_results_df,
residue_table_prelim_df_w_crap,
residues_data_df,
#hemeSA_df,
#max_volume_df,
accessible_df,
excluded_df,
max_accessible_df,
max_excluded_df,
)
# TIDY UP! ------------------
rm(result_files_df,
combined_results_df,
temp_df,
volume_data_clean,
no_quest,
line_w_code,
#clean_tbl,
residue_table_prelim,
result_files_df,
combined_results_df,
residue_table_prelim_df_w_crap,
residues_data_df,
#hemeSA_df,
#max_volume_df,
accessible_df,
excluded_df,
max_accessible_df,
max_excluded_df
)
